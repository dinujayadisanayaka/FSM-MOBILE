{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dinujaya\\\\Desktop\\\\AwesomeProject\\\\Screens\\\\ReportScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Users, UserContext } from \"../Context/context\";\nimport ExploreScreen from \"./ExploreScreen\";\nimport axios from \"axios\";\n\nvar ReportScreen = function (_React$Component) {\n  _inherits(ReportScreen, _React$Component);\n\n  var _super = _createSuper(ReportScreen);\n\n  function ReportScreen() {\n    var _this;\n\n    _classCallCheck(this, ReportScreen);\n\n    _this = _super.call(this);\n    _this.state = {\n      email: \"\",\n      password: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(ReportScreen, [{\n    key: \"submit\",\n    value: function submit() {\n      var _this2 = this;\n\n      axios.post(\"http://104.236.38.247:8000/api/mobilelogin\", {\n        email: this.state.email,\n        password: this.state.password\n      }).then(function (res) {\n        if (res.data[1] == 'Login Successfully') {\n          _this2.props.navigation.navigate(\"Home\");\n\n          console.log('beforeid' + Users.loginuserid);\n          Users.loginuserid = res.data[0].userID;\n          console.log('after' + Users.loginuserid);\n        } else {\n          alert(\"Wrong Login Details\");\n        }\n      });\n    }\n  }, {\n    key: \"out\",\n    value: function out() {\n      this.props.navigation.navigate(\"Home\");\n      console.log('beforeid' + Users.loginuserid);\n      Users.loginuserid = null;\n      console.log('after' + Users.loginuserid);\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(text, field) {\n      if (field == \"email\") {\n        this.setState({\n          email: text\n        });\n      } else if (field == \"password\") {\n        this.setState({\n          password: text\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.logo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }, \"HeyAPP\"), React.createElement(View, {\n        style: styles.inputView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputText,\n        placeholderTextColor: \"#003f5c\",\n        placeholder: \"Enter email\",\n        onChangeText: function onChangeText(text) {\n          return _this3.updateValue(text, \"email\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      })), React.createElement(View, {\n        style: styles.inputView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        secureTextEntry: true,\n        style: styles.inputText,\n        placeholder: \"Password...\",\n        placeholderTextColor: \"#003f5c\",\n        z: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }\n      })), React.createElement(TouchableOpacity, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.forgot,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }, \"Forgot Password?\")), React.createElement(TouchableOpacity, {\n        style: styles.loginBtn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.loginText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }, \"LOGIN\")), React.createElement(TouchableOpacity, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.loginText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }, \"Signup\")));\n    }\n  }]);\n\n  return ReportScreen;\n}(React.Component);\n\nexport { ReportScreen as default };\nReportScreen.contextType = UserContext;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#003f5c',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  logo: {\n    fontWeight: \"bold\",\n    fontSize: 50,\n    color: \"#fb5b5a\",\n    marginBottom: 40\n  },\n  inputView: {\n    width: \"80%\",\n    backgroundColor: \"#465881\",\n    borderRadius: 25,\n    height: 50,\n    marginBottom: 20,\n    justifyContent: \"center\",\n    padding: 20\n  },\n  inputText: {\n    height: 50,\n    color: \"white\"\n  },\n  forgot: {\n    color: \"white\",\n    fontSize: 11\n  },\n  loginBtn: {\n    width: \"80%\",\n    backgroundColor: \"#fb5b5a\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    marginBottom: 10\n  },\n  loginText: {\n    color: \"white\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Dinujaya/Desktop/AwesomeProject/Screens/ReportScreen.js"],"names":["React","Users","UserContext","ExploreScreen","axios","ReportScreen","state","email","password","post","then","res","data","props","navigation","navigate","console","log","loginuserid","userID","alert","text","field","setState","styles","container","logo","inputView","inputText","updateValue","forgot","loginBtn","loginText","Component","contextType","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","fontWeight","fontSize","color","marginBottom","width","borderRadius","height","padding","marginTop"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity } from 'react-native';\r\nimport {Users,UserContext} from '../Context/context';\r\nimport ExploreScreen from \"./ExploreScreen\";\r\nimport axios from \"axios\";\r\nexport default class ReportScreen extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n\r\n\r\n\r\n  submit() {\r\n    axios.post(\"http://104.236.38.247:8000/api/mobilelogin\", {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    })\r\n        // .then((res)=>console.log(res.data[0].userID))\r\n        .then((res) =>{ if(res.data[1]=='Login Successfully'){\r\n          this.props.navigation.navigate(\"Home\");\r\n          console.log('beforeid'+ Users.loginuserid);\r\n          Users.loginuserid=res.data[0].userID;\r\n          console.log('after'+Users.loginuserid);\r\n        }else{\r\n          alert(\"Wrong Login Details\");\r\n        }\r\n        })\r\n  }\r\n\r\n\r\n\r\n  out() {\r\n    this.props.navigation.navigate(\"Home\");\r\n    console.log('beforeid'+ Users.loginuserid);\r\n    Users.loginuserid=null;\r\n    console.log('after'+Users.loginuserid);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  updateValue(text, field) {\r\n    if (field == \"email\") {\r\n      this.setState({\r\n        email: text,\r\n      });\r\n    }else if (field == \"password\") {\r\n      this.setState({\r\n        password: text,\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  render(){\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text style={styles.logo}>HeyAPP</Text>\r\n        <View style={styles.inputView} >\r\n          <TextInput\r\n            style={styles.inputText}\r\n            placeholderTextColor=\"#003f5c\"\r\n            placeholder=\"Enter email\"\r\n            onChangeText={(text) => this.updateValue(text, \"email\")}/>\r\n        </View>\r\n        <View style={styles.inputView} >\r\n          <TextInput\r\n            secureTextEntry\r\n            style={styles.inputText}\r\n            placeholder=\"Password...\"\r\n            placeholderTextColor=\"#003f5c\"\r\n            z/>\r\n        </View>\r\n        <TouchableOpacity>\r\n          <Text style={styles.forgot}>Forgot Password?</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.loginBtn}>\r\n          <Text style={styles.loginText}>LOGIN</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity>\r\n          <Text style={styles.loginText}>Signup</Text>\r\n        </TouchableOpacity>\r\n\r\n\r\n      </View>\r\n    );\r\n  }\r\n}\r\nReportScreen.contextType = UserContext;\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#003f5c',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  logo:{\r\n    fontWeight:\"bold\",\r\n    fontSize:50,\r\n    color:\"#fb5b5a\",\r\n    marginBottom:40\r\n  },\r\n  inputView:{\r\n    width:\"80%\",\r\n    backgroundColor:\"#465881\",\r\n    borderRadius:25,\r\n    height:50,\r\n    marginBottom:20,\r\n    justifyContent:\"center\",\r\n    padding:20\r\n  },\r\n  inputText:{\r\n    height:50,\r\n    color:\"white\"\r\n  },\r\n  forgot:{\r\n    color:\"white\",\r\n    fontSize:11\r\n  },\r\n  loginBtn:{\r\n    width:\"80%\",\r\n    backgroundColor:\"#fb5b5a\",\r\n    borderRadius:25,\r\n    height:50,\r\n    alignItems:\"center\",\r\n    justifyContent:\"center\",\r\n    marginTop:40,\r\n    marginBottom:10\r\n  },\r\n  loginText:{\r\n    color:\"white\"\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}