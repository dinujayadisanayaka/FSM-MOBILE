{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dinujaya\\\\Desktop\\\\AwesomeProject\\\\Screens\\\\AllRouteDetails.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport getDirections from 'react-native-google-maps-directions';\nimport MapView, { Marker } from 'react-native-maps';\nimport MapViewDirections from 'react-native-maps-directions';\nimport React, { useState, useRef, Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport axios from 'axios';\nimport { Users, UserContext } from \"../Context/context\";\nimport ReportScreen from \"./ReportScreen\";\n\nvar AllRouteDetails = function (_Component) {\n  _inherits(AllRouteDetails, _Component);\n\n  var _super = _createSuper(AllRouteDetails);\n\n  function AllRouteDetails() {\n    var _this;\n\n    _classCallCheck(this, AllRouteDetails);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      arr: [],\n      data: {\n        source: {\n          latitude: null,\n          longitude: null\n        },\n        destination: {\n          latitude: null,\n          longitude: null\n        },\n        params: [{\n          key: 'travelmode',\n          value: 'driving'\n        }, {\n          key: 'dir_action',\n          value: 'navigate'\n        }],\n        waypoints: []\n      }\n    };\n\n    _this.handleGetDirections = function (j) {\n      console.log(j);\n      axios.get(\"http://104.236.38.247:8000/api/routewaypoints/\" + j).then(function (res) {\n        _this.setState(function (cur) {\n          return _objectSpread(_objectSpread({}, cur), {}, {\n            data: _objectSpread(_objectSpread({}, cur.data), {}, {\n              source: {\n                latitude: res.data.details[0].start_lat,\n                longitude: res.data.details[0].start_lng\n              },\n              destination: {\n                latitude: res.data.details[0].end_lat,\n                longitude: res.data.details[0].end_lng\n              }\n            })\n          });\n        });\n\n        var _loop = function _loop(i) {\n          _this.setState(function (cur) {\n            return _objectSpread(_objectSpread({}, cur), {}, {\n              data: _objectSpread(_objectSpread({}, cur.data), {}, {\n                waypoints: [].concat(_toConsumableArray(cur.data.waypoints), [{\n                  latitude: res.data.waypoints[i].lat,\n                  longitude: res.data.waypoints[i].lng\n                }])\n              })\n            });\n          });\n        };\n\n        for (var i = 0; i < res.data.waypoints.length; i++) {\n          _loop(i);\n        }\n\n        console.log(_this.state.data);\n        getDirections(_this.state.data);\n      }).catch(function (error) {\n        console.log(error.message);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AllRouteDetails, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('http://104.236.38.247:8000/api/routeview/' + this.context.loginuserid).then(function (res) {\n        var count = Object.keys(res.data).length;\n\n        var _loop2 = function _loop2(i) {\n          _this2.setState(function (cur) {\n            return {\n              arr: [].concat(_toConsumableArray(cur.arr), [res.data[i]])\n            };\n          });\n        };\n\n        for (var i = 0; i < count; i++) {\n          _loop2(i);\n        }\n      }).catch(function (error) {\n        console.log(error.message);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(ScrollView, {\n        style: styles.scrollView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }\n      }, this.state.arr.map(function (item, i) {\n        return React.createElement(View, {\n          key: i,\n          style: styles.container1,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: 'blue',\n            textAlign: 'center',\n            fontWeight: 'bold',\n            fontSize: 25\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 33\n          }\n        }, item.route_name, ' '), React.createElement(Text, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 33\n          }\n        }, \" \"), React.createElement(Button, {\n          key: i,\n          onPress: function onPress() {\n            return _this3.setState(function (cur) {\n              return _objectSpread(_objectSpread({}, cur), {}, {\n                data: {\n                  source: {\n                    latitude: null,\n                    longitude: null\n                  },\n                  destination: {\n                    latitude: null,\n                    longitude: null\n                  },\n                  params: [{\n                    key: 'travelmode',\n                    value: 'driving'\n                  }, {\n                    key: 'dir_action',\n                    value: 'navigate'\n                  }],\n                  waypoints: []\n                }\n              });\n            }) + _this3.handleGetDirections(item.RouteID) + (_this3.context.currouteid = item.RouteID) + (_this3.context.curRouteName = item.route_name);\n          },\n          title: \"Get Directions\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 33\n          }\n        }));\n      })));\n    }\n  }]);\n\n  return AllRouteDetails;\n}(Component);\n\nexport { AllRouteDetails as default };\nAllRouteDetails.contextType = UserContext;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF'\n  },\n  container1: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 70,\n    width: '90%',\n    backgroundColor: '#add8e6',\n    marginVertical: 10\n  },\n  map: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  }\n});","map":{"version":3,"sources":["C:/Users/Dinujaya/Desktop/AwesomeProject/Screens/AllRouteDetails.js"],"names":["getDirections","MapView","Marker","MapViewDirections","React","useState","useRef","Component","axios","Users","UserContext","ReportScreen","AllRouteDetails","state","arr","data","source","latitude","longitude","destination","params","key","value","waypoints","handleGetDirections","j","console","log","get","then","res","setState","cur","details","start_lat","start_lng","end_lat","end_lng","i","lat","lng","length","catch","error","message","context","loginuserid","count","Object","keys","styles","scrollView","container","map","item","container1","color","textAlign","fontWeight","fontSize","route_name","RouteID","currouteid","curRouteName","contextType","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","flexDirection","height","width","marginVertical","position","top","left","right","bottom"],"mappings":"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","sourcesContent":["import getDirections from 'react-native-google-maps-directions';\r\nimport MapView, {Marker} from 'react-native-maps';\r\nimport MapViewDirections from 'react-native-maps-directions';\r\nimport React, {useState, useRef, Component} from 'react';\r\nimport {\r\n    View,\r\n    StyleSheet,\r\n    Dimensions,\r\n    Text,\r\n    FlatList,\r\n    Button,\r\n    TouchableHighlight,\r\n    SafeAreaView,\r\n    ScrollView,\r\n} from 'react-native';\r\nimport axios from 'axios';\r\nimport {Users,UserContext} from '../Context/context';\r\nimport ReportScreen from \"./ReportScreen\";\r\n\r\nexport default class AllRouteDetails extends Component {\r\n    state = {\r\n        arr: [],\r\n        data: {\r\n            source: {\r\n                latitude: null,\r\n                longitude: null,\r\n            },\r\n            destination: {\r\n                latitude: null,\r\n                longitude: null,\r\n            },\r\n            params: [\r\n                {\r\n                    key: 'travelmode',\r\n                    value: 'driving', // may be \"walking\", \"bicycling\" or \"transit\" as well\r\n                },\r\n                {\r\n                    key: 'dir_action',\r\n                    value: 'navigate', // this instantly initializes navigation using the given travel mode\r\n                },\r\n            ],\r\n            waypoints: [],\r\n        },\r\n    };\r\n\r\n    componentDidMount() {\r\n        axios\r\n            .get('http://104.236.38.247:8000/api/routeview/'+this.context.loginuserid)\r\n            .then((res) => {\r\n                let count = Object.keys(res.data).length;\r\n                for (let i = 0; i < count; i++) {\r\n                    this.setState((cur) => ({\r\n                        arr: [...cur.arr, res.data[i]],\r\n                    }));\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.message);\r\n            });\r\n    }\r\n\r\n    handleGetDirections = (j) => {\r\n        console.log(j);\r\n        axios\r\n            .get(`http://104.236.38.247:8000/api/routewaypoints/${j}`)\r\n            .then((res) => {\r\n                this.setState((cur) => ({\r\n                    ...cur,\r\n                    data: {\r\n                        ...cur.data,\r\n                        source: {\r\n                            latitude: res.data.details[0].start_lat,\r\n                            longitude: res.data.details[0].start_lng,\r\n                        },\r\n                        destination: {\r\n                            latitude: res.data.details[0].end_lat,\r\n                            longitude: res.data.details[0].end_lng,\r\n                        },\r\n                    },\r\n                }));\r\n                for (let i = 0; i < res.data.waypoints.length; i++) {\r\n                    this.setState((cur) => ({\r\n                        ...cur,\r\n                        data: {\r\n                            ...cur.data,\r\n                            waypoints: [\r\n                                ...cur.data.waypoints,\r\n                                {\r\n                                    latitude: res.data.waypoints[i].lat,\r\n                                    longitude: res.data.waypoints[i].lng,\r\n                                },\r\n                            ],\r\n                        },\r\n                    }));\r\n                }\r\n                console.log(this.state.data);\r\n                getDirections(this.state.data);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.message);\r\n            });\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <ScrollView style={styles.scrollView}>\r\n                <View style={styles.container}>\r\n                    {/* <Text  style={{\r\n                  color: 'green',\r\n                  textAlign: 'center',\r\n                  fontWeight: 'bold',\r\n                  fontSize: 35,\r\n                }}>MY ROUTES</Text> */}\r\n                    {this.state.arr.map((item, i) => {\r\n                        return (\r\n                            <View key={i} style={styles.container1}>\r\n                                <Text\r\n                                    style={{\r\n                                        color: 'blue',\r\n                                        textAlign: 'center',\r\n                                        fontWeight: 'bold',\r\n                                        fontSize: 25,\r\n                                    }}>\r\n                                    {item.route_name}{' '}\r\n                                </Text>\r\n                                <Text> </Text>\r\n                                <Button\r\n                                    key={i}\r\n                                    onPress={() =>\r\n                                        this.setState((cur) => ({\r\n                                            ...cur,\r\n                                            data: {\r\n                                                source: {\r\n                                                    latitude: null,\r\n                                                    longitude: null,\r\n                                                },\r\n                                                destination: {\r\n                                                    latitude: null,\r\n                                                    longitude: null,\r\n                                                },\r\n                                                params: [\r\n                                                    {\r\n                                                        key: 'travelmode',\r\n                                                        value: 'driving', // may be \"walking\", \"bicycling\" or \"transit\" as well\r\n                                                    },\r\n                                                    {\r\n                                                        key: 'dir_action',\r\n                                                        value: 'navigate', // this instantly initializes navigation using the given travel mode\r\n                                                    },\r\n                                                ],\r\n                                                waypoints: [],\r\n                                            },\r\n                                        })) + this.handleGetDirections(item.RouteID)+(this.context.currouteid=item.RouteID)+(this.context.curRouteName=item.route_name)\r\n                                    }\r\n                                    title=\"Get Directions\"\r\n                                />\r\n                            </View>\r\n                        );\r\n                    })}\r\n                </View>\r\n\r\n            </ScrollView>\r\n\r\n\r\n        );\r\n    }\r\n}\r\nAllRouteDetails.contextType = UserContext;\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: '#F5FCFF',\r\n    },\r\n    container1: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height:70,\r\n        width: '90%',\r\n        backgroundColor: '#add8e6',\r\n        marginVertical: 10,\r\n        // borderRadius:15,\r\n    },\r\n    map: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}