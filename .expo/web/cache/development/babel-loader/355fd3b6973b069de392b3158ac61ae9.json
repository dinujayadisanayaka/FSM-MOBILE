{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dinujaya\\\\Desktop\\\\AwesomeProject\\\\Screens\\\\ReturnDetails.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { RadioButtonGroup } from \"react-native-web/dist/index\";\nimport { RadioButton } from \"react-native-web/dist/index\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport axios from \"axios\";\n\nvar ReturnDetails = function (_React$Component) {\n  _inherits(ReturnDetails, _React$Component);\n\n  var _super = _createSuper(ReturnDetails);\n\n  function ReturnDetails() {\n    var _this;\n\n    _classCallCheck(this, ReturnDetails);\n\n    _this = _super.call(this);\n\n    _this.refresh = function () {\n      _this.setState(_this.state);\n    };\n\n    _this.state = {\n      shop_name: \"\",\n      owner_name: \"\",\n      owner_NIC: \"\",\n      address_no: \"\",\n      suburb: \"\",\n      city: \"\",\n      province: \"\",\n      country: \"\",\n      telephone_numbers: \"\",\n      user_id: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(ReturnDetails, [{\n    key: \"submit\",\n    value: function submit() {\n      axios.post(\"http://104.236.38.247:8000/api/mobileshopadd\", {\n        shop_name: this.state.shop_name,\n        owner_name: this.state.owner_name,\n        owner_NIC: this.state.owner_NIC,\n        address_no: this.state.address_no,\n        suburb: this.state.suburb,\n        city: this.state.city,\n        province: this.state.province,\n        country: this.state.country,\n        telephone_numbers: this.state.telephone_numbers,\n        user_id: this.state.user_id\n      }).then(function (res) {\n        return console.log(res);\n      }).catch(function (error) {\n        return console.log(error);\n      });\n      this.setState(this.state);\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(text, field) {\n      if (field == \"shop_name\") {\n        this.setState({\n          shop_name: text\n        });\n      } else if (field == \"owner_name\") {\n        this.setState({\n          owner_name: text\n        });\n      } else if (field == \"owner_NIC\") {\n        this.setState({\n          owner_NIC: text\n        });\n      } else if (field == \"address_no\") {\n        this.setState({\n          address_no: text\n        });\n      } else if (field == \"suburb\") {\n        this.setState({\n          suburb: text\n        });\n      } else if (field == \"city\") {\n        this.setState({\n          city: text\n        });\n      } else if (field == \"province\") {\n        this.setState({\n          province: text\n        });\n      } else if (field == \"country\") {\n        this.setState({\n          country: text\n        });\n      } else if (field == \"telephone_numbers\") {\n        this.setState({\n          telephone_numbers: text\n        });\n      } else if (field == \"user_id\") {\n        this.setState({\n          user_id: text\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(SafeAreaView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 9\n        }\n      }, React.createElement(ScrollView, {\n        style: styles.scrollView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \"Enter Shop Name\",\n        onChangeText: function onChangeText(text) {\n          return _this2.updateValue(text, \"shop_name\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 11\n        }\n      }), React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \"Enter Owner Name\",\n        onChangeText: function onChangeText(text) {\n          return _this2.updateValue(text, \"owner_name\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 11\n        }\n      }), React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \"Enter NIC\",\n        onChangeText: function onChangeText(text) {\n          return _this2.updateValue(text, \"owner_NIC\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 11\n        }\n      }), React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \"Enter Address No\",\n        onChangeText: function onChangeText(text) {\n          return _this2.updateValue(text, \"address_no\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 11\n        }\n      }), React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \"Enter Suburb\",\n        onChangeText: function onChangeText(text) {\n          return _this2.updateValue(text, \"suburb\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 11\n        }\n      }), React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \"Enter City\",\n        onChangeText: function onChangeText(text) {\n          return _this2.updateValue(text, \"city\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 11\n        }\n      }), React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \"Enter Province\",\n        onChangeText: function onChangeText(text) {\n          return _this2.updateValue(text, \"province\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 11\n        }\n      }), React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \"Enter Country\",\n        onChangeText: function onChangeText(text) {\n          return _this2.updateValue(text, \"country\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 11\n        }\n      }), React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \"Enter TP\",\n        onChangeText: function onChangeText(text) {\n          return _this2.updateValue(text, \"telephone_numbers\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 11\n        }\n      }), React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \"Enter User ID\",\n        onChangeText: function onChangeText(text) {\n          return _this2.updateValue(text, \"user_id\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 11\n        }\n      }), React.createElement(Button, {\n        title: \"Submit\",\n        onPress: function onPress() {\n          _this2.submit();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 11\n        }\n      }))));\n    }\n  }]);\n\n  return ReturnDetails;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  input: {\n    borderWidth: 2,\n    borderColor: \"skyblue\",\n    margin: 20,\n    marginTop: 20\n  },\n  container: {\n    margin: 20,\n    marginTop: 100\n  },\n  scrollView: {\n    backgroundColor: 'pink',\n    marginHorizontal: 20\n  },\n  text: {\n    fontSize: 42\n  }\n});\nexport default ReturnDetails;","map":{"version":3,"sources":["C:/Users/Dinujaya/Desktop/AwesomeProject/Screens/ReturnDetails.js"],"names":["React","useState","RadioButtonGroup","RadioButton","axios","ReturnDetails","refresh","setState","state","shop_name","owner_name","owner_NIC","address_no","suburb","city","province","country","telephone_numbers","user_id","post","then","res","console","log","catch","error","text","field","styles","container","scrollView","input","updateValue","submit","Component","StyleSheet","create","borderWidth","borderColor","margin","marginTop","backgroundColor","marginHorizontal","fontSize"],"mappings":"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","sourcesContent":["\r\n//  // React Native Get Current Date Time\r\n// // https://aboutreact.com/react-native-get-current-date-time/\r\n\r\n// // import React in our code\r\n// import React, {useState, useEffect} from 'react';\r\n\r\n// // import all the components we are going to use\r\n// import {SafeAreaView, StyleSheet, View, Text,TouchableOpacity} from 'react-native';\r\n\r\n// const ReturnDetails = ({navigation}) => {\r\n//   const [currentDate, setCurrentDate] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     var date = new Date().getDate(); //Current Date\r\n//     var month = new Date().getMonth() + 1; //Current Month\r\n//     var year = new Date().getFullYear(); //Current Year\r\n//     var hours = new Date().getHours(); //Current Hours\r\n//     var min = new Date().getMinutes(); //Current Minutes\r\n//     var sec = new Date().getSeconds(); //Current Seconds\r\n//     setCurrentDate(\r\n//       date + '/' + month + '/' + year \r\n//       + '     ' + hours + ':' + min + ':' + sec\r\n//     );\r\n//   }, []);\r\n\r\n//   return (\r\n//     <SafeAreaView style={{flex: 1}}>\r\n//       <View style={styles.container}>\r\n//         <View style={styles.container}>\r\n//           <Text style={styles.textStyle}>\r\n\r\n//           </Text>\r\n//           <Text style={styles.textStyle}>\r\n//             {currentDate}\r\n//           </Text>\r\n//         </View>\r\n//         <TouchableOpacity  style = {styles.button} onPress={() => navigation.navigate(\"Home\")}>\r\n//          <Text>Home</Text>\r\n//       </TouchableOpacity>\r\n//         <Text\r\n//           style={{\r\n//             fontSize: 16,\r\n//             textAlign: 'center',\r\n//             color: 'green'\r\n//           }}>\r\n//           Successfully updated\r\n//         </Text>\r\n//       </View>\r\n//     </SafeAreaView>\r\n//   );\r\n// };\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flex: 1,\r\n//     backgroundColor: 'white',\r\n//     justifyContent: 'center',\r\n//     padding: 10,\r\n//   },\r\n//   textStyle: {\r\n//     textAlign: 'center',\r\n//     fontSize: 18,\r\n//     color: 'black',\r\n//   },\r\n\r\n//   button: {\r\n//     backgroundColor: '#4ba37b',\r\n//     width: 100,\r\n//     borderRadius: 50,\r\n//     alignItems: 'center',\r\n//     marginTop: 100\r\n//  },\r\n// });\r\n\r\n// export default ReturnDetails;\r\n\r\n\r\n\r\n\r\n// //\r\n// import React, { Component } from \"react\";\r\n// // import {useState, useEffect} from \"react\";\r\n\r\n// import { View, Text, Button, StyleSheet, SafeAreaView, ScrollView, TouchableOpacity, TouchableHighlight } from 'react-native';\r\n// import { TextInput } from 'react-native-gesture-handler';\r\n// // import { render } from 'react-dom';\r\n// import DatePicker from 'react-native-datepicker'\r\n\r\n// export default class ReturnDetails extends Component {\r\n\r\n\r\n\r\n\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = { shop_name: '', owner_name: '', owner_NIC: '', lat: '', lng: '', image: '', address_no: '', suburb: '', city: '', province: '', country: '', registered_date: 'null', due_dates: '', user_id: '' };\r\n//   }\r\n\r\n\r\n//   InsertRecord = () => {\r\n//     var shop_name = this.state.shop_name;\r\n//     var owner_name = this.state.owner_name;\r\n//     var owner_NIC = this.state.owner_NIC;\r\n//     var lat = this.state.lat;\r\n//     var lng = this.state.lng;\r\n//     var image = this.state.image;\r\n//     var address_no = this.state.address_no;\r\n//     var suburb = this.state.suburb;\r\n//     var city = this.state.city;\r\n//     var province = this.state.province;\r\n//     var country = this.state.country;\r\n//     var registered_date = this.state.registered_date;\r\n//     var due_dates = this.state.due_dates;\r\n//     var user_id = this.state.user_id;\r\n\r\n\r\n//     // if (Check_IN.length == 0 && Check_Out.length == 0) {\r\n//     //   alert(\"Required field is missing\");\r\n//     // }\r\n//     // else {\r\n//     var InserAPIURL = \"http://10.0.2.2:80/api/insertshop.php\";\r\n//     var headers = {\r\n//       'Accept': 'application/json',\r\n//       'Content-Type': 'application.json'\r\n//     };\r\n\r\n//     var Data = {\r\n//       shop_name: shop_name,\r\n//       owner_name: owner_name,\r\n//       owner_NIC: owner_NIC,\r\n//       lat: lat,\r\n//       lng: lng,\r\n//       image: image,\r\n//       address_no: address_no,\r\n//       suburb: suburb,\r\n//       city: city,\r\n//       province: province,\r\n//       country: country,\r\n//       registered_date: registered_date,\r\n//       due_dates: due_dates,\r\n//       user_id: user_id,\r\n\r\n//     };\r\n\r\n//     fetch(InserAPIURL,\r\n//       {\r\n//         method: 'POST',\r\n//         headers: headers,\r\n//         body: JSON.stringify(Data)\r\n//       }\r\n//     )\r\n\r\n//       .then((response) => response.json())\r\n//       .then((response) => {\r\n//         alert(response[0].Message);\r\n//       }\r\n//       )\r\n//       .catch((error) => {\r\n//         alert(\"Check_In updated \" + error);\r\n//       }\r\n//       )\r\n//   }\r\n\r\n//   //checkout\r\n\r\n\r\n//   render() {\r\n\r\n//     // const [currentDate, setCurrentDate] = useState('');\r\n\r\n//     // useEffect(() => {\r\n//     //   var date = new Date().getDate(); //Current Date\r\n//     //   var month = new Date().getMonth() + 1; //Current Month\r\n//     //   var year = new Date().getFullYear(); //Current Year\r\n//     //   var hours = new Date().getHours(); //Current Hours\r\n//     //   var min = new Date().getMinutes(); //Current Minutes\r\n//     //   var sec = new Date().getSeconds(); //Current Seconds\r\n//     //   setCurrentDate(\r\n//     //     date + '/' + month + '/' + year + ' ' + hours + ':' + min + ':' + sec\r\n//     //   );\r\n//     // }, []);\r\n\r\n\r\n//     return (\r\n\r\n//       <SafeAreaView style={styles.container}>\r\n//         <ScrollView style={styles.scrollView}>\r\n//           <View style={styles.formWrapper}>\r\n\r\n//             <Text style={styles.welcomeText}>Shop Details</Text>\r\n//             <View style={styles.formRow}>\r\n\r\n\r\n//               <TextInput\r\n//                 placeholder={\"Shop Name\"}\r\n\r\n//                 style={styles.textInput}\r\n//                 onChangeText={shop_name => this.setState({ shop_name })}\r\n\r\n\r\n//               />\r\n//             </View>\r\n//             <View style={styles.formRow}>\r\n//               <TextInput\r\n//                 placeholder={\"Owner's Name\"}\r\n\r\n//                 style={styles.textInput}\r\n//                 onChangeText={owner_name => this.setState({ owner_name })}\r\n\r\n//               />\r\n//             </View>\r\n\r\n//             <View style={styles.formRow}>\r\n//               <TextInput\r\n//                 placeholder={\"Owner's NIC\"}\r\n\r\n//                 style={styles.textInput}\r\n//                 onChangeText={owner_NIC => this.setState({ owner_NIC })}\r\n\r\n//               />\r\n\r\n//             </View>\r\n//             {/* <View style={styles.formRow}>\r\n//               <TextInput\r\n//                 placeholder={\"Lat\"}\r\n\r\n//                 style={styles.textInput}\r\n//                 onChangeText={lat => this.setState({ lat })}\r\n\r\n//               />\r\n//             </View> */}\r\n//             {/* <View style={styles.formRow}>\r\n//               <TextInput\r\n//                 placeholder={\"Lng\"}\r\n\r\n//                 style={styles.textInput}\r\n//                 onChangeText={lng => this.setState({ lng })}\r\n\r\n//               />\r\n//             </View> */}\r\n//             {/* <View style={styles.formRow}>\r\n//               <TextInput\r\n//                 placeholder={\"Image\"}\r\n\r\n//                 style={styles.textInput}\r\n//                 onChangeText={image => this.setState({ image })}\r\n\r\n//               />\r\n//             </View> */}\r\n//             <View style={styles.formRow}>\r\n//               <TextInput\r\n//                 placeholder={\"Adress No\"}\r\n\r\n//                 style={styles.textInput}\r\n//                 onChangeText={address_no => this.setState({ address_no })}\r\n\r\n//               />\r\n//             </View>\r\n\r\n//             <View style={styles.formRow}>\r\n//               <TextInput\r\n//                 placeholder={\"Suburb\"}\r\n\r\n//                 style={styles.textInput}\r\n//                 onChangeText={suburb => this.setState({ suburb })}\r\n\r\n//               />\r\n\r\n//             </View>\r\n\r\n//             <View style={styles.formRow}>\r\n//               <TextInput\r\n//                 placeholder={\"City\"}\r\n\r\n//                 style={styles.textInput}\r\n//                 onChangeText={city => this.setState({ city })}\r\n//               />\r\n//             </View>\r\n//             <View style={styles.formRow}>\r\n//               <TextInput\r\n//                 placeholder={\"Province\"}\r\n\r\n//                 style={styles.textInput}\r\n//                 onChangeText={province => this.setState({ province })}\r\n//               />\r\n//             </View>\r\n//             <View style={styles.formRow}>\r\n//               <TextInput\r\n//                 placeholder={\"Country\"}\r\n\r\n//                 style={styles.textInput}\r\n//                 onChangeText={country => this.setState({ country })}\r\n\r\n//               />\r\n//             </View>\r\n//             {/* <Text style={styles.regText}>Register Date</Text>\r\n//              <View style={styles.formRow}>\r\n//              <DatePicker\r\n//         style={{width: '95%'}}\r\n//         // date={this.state.date}\r\n//         mode=\"date\"\r\n//         placeholder=\"select register date\"\r\n//         format=\"YYYY-MM-DD\"\r\n//         minDate=\"2016-05-01\"\r\n//         maxDate=\"2016-06-01\"\r\n//         confirmBtnText=\"Confirm\"\r\n//         cancelBtnText=\"Cancel\"\r\n//         customStyles={{\r\n//           dateIcon: {\r\n//             position: 'absolute',\r\n//             right: 0,\r\n//             top: 4,\r\n//             marginLeft: 0\r\n//           },\r\n//           dateInput: {\r\n//             marginLeft: 36\r\n//           }\r\n//           // ... You can check the source to find the other keys.\r\n//         }}\r\n//         // onDateChange={(date) => {this.setState({date: date})}}\r\n//       />\r\n//             </View>  */}\r\n//             {/* <View style={styles.formRow}>\r\n//               <TextInput\r\n//                 placeholder={\"Due date\"}\r\n\r\n//                 style={styles.textInput}\r\n//                 onChangeText={due_dates => this.setState({ due_dates })}\r\n\r\n//               />\r\n//             </View> */}\r\n\r\n//             <View style={styles.formRow}>\r\n//               <TextInput\r\n//                 placeholder={\"User ID\"}\r\n\r\n//                 style={styles.textInput}\r\n//                 onChangeText={user_id => this.setState({ user_id })}\r\n\r\n//               />\r\n//             </View>\r\n\r\n//             <View>\r\n//               <TouchableOpacity\r\n//                 onPress={this.InsertRecord}\r\n//                 style={{\r\n//                   height: 42,\r\n//                   width: 100,\r\n//                   justifyContent: 'center',\r\n//                   alignItems: 'center',\r\n//                   alignSelf: 'center',\r\n//                   backgroundColor: '#2B547E',\r\n//                   borderRadius: 20,\r\n//                 }}>\r\n//                 <Text\r\n//                   style={{\r\n//                     color: 'white',\r\n//                     textAlign: 'center',\r\n//                     fontWeight: 'bold',\r\n//                     fontSize: 16,\r\n//                   }}>\r\n//                   Submit\r\n//                             </Text>\r\n//               </TouchableOpacity>\r\n//             </View>\r\n\r\n\r\n\r\n//           </View>\r\n//         </ScrollView>\r\n//       </SafeAreaView>\r\n\r\n//     );\r\n\r\n//   }\r\n// }\r\n\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flex: 1,\r\n//     padding: 20,\r\n//     marginTop: 10,\r\n//   },\r\n\r\n//   scrollView: {\r\n\r\n//     marginHorizontal: 1,\r\n//   },\r\n//   formRow: {\r\n//     marginBottom: 10,\r\n//     marginLeft: 13,\r\n//     justifyContent: 'center',\r\n//   },\r\n//   empty: {\r\n//     textAlign: 'center',\r\n//     color: '#808080',\r\n//   },\r\n\r\n//   addProductBtn: {\r\n//     backgroundColor: 'blue',\r\n//     paddingVertical: 10,\r\n//   },\r\n\r\n//   addProductText: {\r\n//     textAlign: 'center',\r\n//     color: '#fff',\r\n//     fontSize: 15,\r\n//     fontWeight: 'bold',\r\n//   },\r\n\r\n//   formRow: {\r\n//     marginBottom: 10,\r\n//   },\r\n\r\n//   textInput: {\r\n//     backgroundColor: '#add',\r\n//     height: 40,\r\n//     paddingHorizontal: 10,\r\n//     color: '#808080',\r\n//     borderRadius: 20,\r\n//   },\r\n//   empty: {\r\n//     textAlign: 'center',\r\n//   },\r\n\r\n//   addProductBtn: {\r\n//     backgroundColor: 'blue',\r\n//     paddingVertical: 10,\r\n//   },\r\n\r\n//   addProductText: {\r\n//     textAlign: 'center',\r\n//     color: '#fff',\r\n//     fontSize: 15,\r\n//     fontWeight: 'bold',\r\n//   },\r\n\r\n//   // container:{\r\n//   //     height:\"100%\",\r\n//   //     alignItems:\"center\",\r\n//   //     justifyContent:\"center\"\r\n//   // }\r\n\r\n//   formWrapper: {\r\n//     width: '80%',\r\n//     justifyContent: 'center',\r\n//   },\r\n\r\n//   formRow: {\r\n//     marginBottom: 10,\r\n//   },\r\n\r\n//   textInput: {\r\n//     backgroundColor: '#add',\r\n//     height: 40,\r\n//     paddingHorizontal: 10,\r\n//     color: '#333',\r\n//     borderRadius: 20,\r\n//   },\r\n\r\n//   welcomeText: {\r\n//     textAlign: 'center',\r\n//     marginBottom: 20,\r\n//     fontSize: 24,\r\n//     fontWeight: 'bold',\r\n//     color: '#2B547E',\r\n//   },\r\n//   regText: {\r\n//     textAlign: 'center',\r\n//     marginBottom: 10,\r\n//     fontSize: 14,\r\n//     fontWeight: 'bold',\r\n     \r\n//   },\r\n\r\n// });;\r\n\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  TextInput,\r\n  Button,\r\n  RadioButtonGroup,\r\n  RadioButton,\r\n  SafeAreaView, ScrollView,\r\n  Text\r\n} from \"react-native\";\r\n\r\nimport axios from \"axios\";\r\n\r\nclass ReturnDetails extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n    shop_name: \"\",\r\n    owner_name: \"\",\r\n    owner_NIC: \"\",\r\n    address_no: \"\",\r\n    suburb: \"\",\r\n    city: \"\",\r\n    province: \"\",\r\n    country: \"\",\r\n    telephone_numbers: \"\",\r\n    user_id: \"\",\r\n    };\r\n  }\r\n  refresh = () => {\r\n    this.setState(this.state);\r\n  };\r\n  \r\n  submit() {\r\n    axios.post(\"http://104.236.38.247:8000/api/mobileshopadd\", {\r\n      shop_name: this.state.shop_name,\r\n      owner_name: this.state.owner_name,\r\n      owner_NIC: this.state.owner_NIC,\r\n      address_no: this.state.address_no,\r\n      suburb: this.state.suburb,\r\n      city: this.state.city,\r\n      province: this.state.province,\r\n      country: this.state.country,\r\n      telephone_numbers: this.state.telephone_numbers,\r\n      user_id: this.state.user_id,\r\n    })\r\n        .then((res) => console.log(res))\r\n        .catch((error) => console.log(error));\r\n\r\n    \r\n      this.setState(this.state);\r\n    \r\n  }\r\n\r\n  updateValue(text, field) {\r\n    if (field == \"shop_name\") {\r\n      this.setState({\r\n        shop_name: text,\r\n      });\r\n    } else if (field == \"owner_name\") {\r\n      this.setState({\r\n        owner_name: text,\r\n      });\r\n    } else if (field == \"owner_NIC\") {\r\n      this.setState({\r\n        owner_NIC: text,\r\n      });\r\n    } else if (field == \"address_no\") {\r\n      this.setState({\r\n        address_no: text,\r\n      });\r\n    } else if (field == \"suburb\") {\r\n      this.setState({\r\n        suburb: text,\r\n      });\r\n    } else if (field == \"city\") {\r\n      this.setState({\r\n        city: text,\r\n      });\r\n    } else if (field == \"province\") {\r\n      this.setState({\r\n        province: text,\r\n      });\r\n    } else if (field == \"country\") {\r\n      this.setState({\r\n        country: text,\r\n      });\r\n    } else if (field == \"telephone_numbers\") {\r\n      this.setState({\r\n        telephone_numbers: text,\r\n      });\r\n    } else if (field == \"user_id\") {\r\n      this.setState({\r\n        user_id: text,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <SafeAreaView style={styles.container}>\r\n          <ScrollView style={styles.scrollView}>\r\n        <View style={styles.container}>\r\n          <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Enter Shop Name\"\r\n              onChangeText={(text) => this.updateValue(text, \"shop_name\")}\r\n          />\r\n\r\n          <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Enter Owner Name\"\r\n              onChangeText={(text) => this.updateValue(text, \"owner_name\")}\r\n          />\r\n\r\n          <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Enter NIC\"\r\n              onChangeText={(text) => this.updateValue(text, \"owner_NIC\")}\r\n          />\r\n\r\n          <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Enter Address No\"\r\n              onChangeText={(text) => this.updateValue(text, \"address_no\")}\r\n          />\r\n\r\n          <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Enter Suburb\"\r\n              onChangeText={(text) => this.updateValue(text, \"suburb\")}\r\n          />\r\n\r\n          <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Enter City\"\r\n              onChangeText={(text) => this.updateValue(text, \"city\")}\r\n          />\r\n\r\n          <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Enter Province\"\r\n              onChangeText={(text) => this.updateValue(text, \"province\")}\r\n          />\r\n\r\n          <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Enter Country\"\r\n              onChangeText={(text) => this.updateValue(text, \"country\")}\r\n          />\r\n\r\n          <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Enter TP\"\r\n              onChangeText={(text) => this.updateValue(text, \"telephone_numbers\")}\r\n          />\r\n\r\n          <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Enter User ID\"\r\n              onChangeText={(text) => this.updateValue(text, \"user_id\")}\r\n          />\r\n\r\n\r\n          <Button\r\n              title=\"Submit\"\r\n              onPress={() => {\r\n                this.submit();\r\n              }}\r\n          />\r\n        </View>\r\n          </ScrollView>\r\n        </SafeAreaView>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  input: {\r\n    borderWidth: 2,\r\n    borderColor: \"skyblue\",\r\n    margin: 20,\r\n    marginTop: 20,\r\n  },\r\n  container: {\r\n    margin: 20,\r\n    marginTop: 100,\r\n  },\r\n  scrollView: {\r\n    backgroundColor: 'pink',\r\n    marginHorizontal: 20,\r\n  },\r\n  text: {\r\n    fontSize: 42,\r\n  },\r\n});\r\n\r\nexport default ReturnDetails;"]},"metadata":{},"sourceType":"module"}