{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dinujaya\\\\Desktop\\\\AwesomeProject\\\\Screens\\\\Check.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\n\nvar Check = function (_Component) {\n  _inherits(Check, _Component);\n\n  var _super = _createSuper(Check);\n\n  function Check(props) {\n    var _this;\n\n    _classCallCheck(this, Check);\n\n    _this = _super.call(this, props);\n\n    _this.InsertRecord = function () {\n      fetch('http://104.236.38.247:8000/api/attendancecheckin/2', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n    };\n\n    _this.InsertRecordB = function () {\n      fetch('http://104.236.38.247:8000/api/attendancecheckout/2', {\n        method: 'PUT',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n    };\n\n    _this.state = {\n      toggle: false\n    };\n    _this.state = {\n      Check_IN: 'Check_IN',\n      Check_Out: 'CheckOut'\n    };\n    return _this;\n  }\n\n  _createClass(Check, [{\n    key: \"_onPress\",\n    value: function _onPress() {\n      var newState = !this.state.toggle;\n      this.setState({\n        toggle: newState\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var toggle = this.state.toggle;\n      var textValue = toggle ? \"Check-Out\" : \"Check-IN\";\n      var textALERT = toggle ? \"CheckOut Successfully updated\" : \"CheckIN Successfully updated\";\n      var buttonbg = toggle ? \"#387c44\" : \"#348017\";\n      var insert = toggle ? this.InsertRecord() : this.InsertRecordB();\n      return React.createElement(View, {\n        style: styles.Container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2._onPress();\n\n          insert;\n          alert(textALERT);\n        },\n        style: {\n          marginTop: 10,\n          height: 45,\n          flexDirection: 'row',\n          justifyContent: 'center',\n          alignItems: 'center',\n          width: 250,\n          borderRadius: 30,\n          backgroundColor: buttonbg\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.fon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }\n      }, textValue))));\n    }\n  }]);\n\n  return Check;\n}(Component);\n\nexport { Check as default };\nvar styles = StyleSheet.create({\n  Container: {\n    flexDirection: 'column',\n    flex: 1,\n    backgroundColor: '#FFFFFF',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  row: {\n    fontSize: 18,\n    padding: 12\n  },\n  textInput: {\n    textAlign: 'center',\n    height: 40,\n    borderWidth: 1,\n    borderColor: '#009688',\n    borderRadius: 55,\n    backgroundColor: \"#FFFF\",\n    marginTop: 10\n  },\n  fon: {\n    fontWeight: 'bold',\n    fontSize: 20,\n    color: '#fff'\n  }\n});\nAppRegistry.registerComponent('Check', function () {\n  return Check;\n});","map":{"version":3,"sources":["C:/Users/Dinujaya/Desktop/AwesomeProject/Screens/Check.js"],"names":["React","Component","Ionicons","Check","props","InsertRecord","fetch","method","headers","Accept","InsertRecordB","state","toggle","Check_IN","Check_Out","newState","setState","textValue","textALERT","buttonbg","insert","styles","Container","flexDirection","_onPress","alert","marginTop","height","justifyContent","alignItems","width","borderRadius","backgroundColor","fon","StyleSheet","create","flex","row","fontSize","padding","textInput","textAlign","borderWidth","borderColor","fontWeight","color","AppRegistry","registerComponent"],"mappings":"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","sourcesContent":["\r\n\r\nimport React, { Component } from 'react'\r\n\r\nimport { ActivityIndicator, Alert, FlatList, Text, StyleSheet, View, TextInput, TouchableOpacity, TouchableHighlight, Button, SafeAreaView, ScrollView, AppRegistry } from 'react-native';\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\n\r\nexport default class Check extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { Check_IN: 'Check_IN', Check_Out: 'CheckOut' };\r\n    }\r\n\r\n\r\n    InsertRecord = () => {\r\n        fetch('http://104.236.38.247:8000/api/attendancecheckin/2', {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        );\r\n\r\n\r\n    };\r\n\r\n    //checkout\r\n    //   InsertRecordB = () => {\r\n\r\n    //     var Check_Out = this.state.Check_Out;\r\n\r\n    //     // if (Check_IN.length == 0 && Check_Out.length == 0) {\r\n    //     //   alert(\"Required field is missing\");\r\n    //     // }\r\n    //     // else {\r\n    //     var InserAPIURL = \"http://104.236.38.247:8000/api/attendancecheckout/1\";\r\n    //     var headers = {\r\n    //       'Accept': 'application/json',\r\n    //       'Content-Type': 'application.json'\r\n    //     };\r\n\r\n    //     var Data = {\r\n\r\n    //       Check_Out: Check_Out\r\n    //     };\r\n\r\n    //     fetch(InserAPIURL,\r\n    //       {\r\n    //         method: 'PUT',\r\n    //         headers: headers,\r\n    //         body: JSON.stringify(Data)\r\n    //       }\r\n    //     )\r\n\r\n    //       .then((response) => response.json())\r\n    //   .then((response) => {\r\n    //     alert(response[1].Message);\r\n    //   }\r\n    //   )\r\n    //       .catch((error) => {\r\n    //         alert(\"Check_Out updated \");\r\n    //       }\r\n    //       )\r\n    // }\r\n    InsertRecordB = () => {\r\n        fetch('http://104.236.38.247:8000/api/attendancecheckout/2', {\r\n            method: 'PUT',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n        );\r\n\r\n\r\n    };\r\n    state = {\r\n        toggle: false\r\n    }\r\n\r\n    _onPress() {\r\n        const newState = !this.state.toggle;\r\n        this.setState({ toggle: newState })\r\n    }\r\n    render() {\r\n        const { toggle } = this.state;\r\n        const textValue = toggle ? \"Check-Out\" : \"Check-IN\";\r\n        const textALERT = toggle ? \"CheckOut Successfully updated\" : \"CheckIN Successfully updated\";\r\n        const buttonbg = toggle ? \"#387c44\" : \"#348017\";\r\n\r\n        const insert = toggle ? this.InsertRecord() : this.InsertRecordB();\r\n        return (\r\n            <View style={styles.Container}>\r\n                <View style={{ flexDirection: 'row' }}>\r\n                    <TouchableOpacity\r\n\r\n                        onPress={\r\n                            () => { this._onPress(); insert; alert(textALERT) }\r\n                        }\r\n                        style={{\r\n                            marginTop: 10,\r\n                            height: 45,\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n\r\n                            width: 250,\r\n                            borderRadius: 30,\r\n                            backgroundColor: buttonbg,\r\n                        }}>\r\n                        <Text style={styles.fon}>{textValue}</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n\r\n    Container: {\r\n        flexDirection: 'column',\r\n        flex: 1,\r\n        backgroundColor: '#FFFFFF',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n\r\n    },\r\n\r\n    row: {\r\n        fontSize: 18,\r\n        padding: 12\r\n    },\r\n\r\n    textInput: {\r\n\r\n        textAlign: 'center',\r\n        height: 40,\r\n        borderWidth: 1,\r\n        borderColor: '#009688',\r\n        borderRadius: 55,\r\n        backgroundColor: \"#FFFF\",\r\n        marginTop: 10,\r\n\r\n    },\r\n\r\n    fon: {\r\n        fontWeight: 'bold',\r\n        fontSize: 20,\r\n        color: '#fff',\r\n    },\r\n});\r\n\r\nAppRegistry.registerComponent('Check', () => Check);\r\n"]},"metadata":{},"sourceType":"module"}