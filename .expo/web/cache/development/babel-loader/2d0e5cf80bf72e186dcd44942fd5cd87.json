{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dinujaya\\\\Desktop\\\\AwesomeProject\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport * as ImagePicker from 'expo-image-picker';\nexport default function ImagePickerExample() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== 'web')) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== 'granted') {\n                alert('Sorry, we need camera roll permissions to make this work!');\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: \"Pick an image from camera roll\",\n    onPress: pickImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  }), image && React.createElement(Image, {\n    source: {\n      uri: image\n    },\n    style: {\n      width: 200,\n      height: 200\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 23\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Dinujaya/Desktop/AwesomeProject/App.js"],"names":["React","useState","useEffect","ImagePicker","ImagePickerExample","image","setImage","Platform","OS","requestMediaLibraryPermissionsAsync","status","alert","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","console","log","cancelled","uri","flex","alignItems","justifyContent","width","height"],"mappings":";;;AA2MA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AAEA,eAAe,SAASC,kBAAT,GAA8B;AACzC,kBAA0BH,QAAQ,CAAC,IAAD,CAAlC;AAAA;AAAA,MAAOI,KAAP;AAAA,MAAcC,QAAd;;AAEAJ,EAAAA,SAAS,CAAC,YAAM;AACZ,KAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oBACOK,QAAQ,CAACC,EAAT,KAAgB,KADvB;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAEgCL,WAAW,CAACM,mCAAZ,EAFhC;;AAAA;AAAA;AAEeC,cAAAA,MAFf,yBAEeA,MAFf;;AAGO,kBAAIA,MAAM,KAAK,SAAf,EAA0B;AACtBC,gBAAAA,KAAK,CAAC,2DAAD,CAAL;AACH;;AALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAQH,GATQ,EASN,EATM,CAAT;;AAWA,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACKT,WAAW,CAACU,uBAAZ,CAAoC;AACnDC,cAAAA,UAAU,EAAEX,WAAW,CAACY,gBAAZ,CAA6BC,GADU;AAEnDC,cAAAA,aAAa,EAAE,IAFoC;AAGnDC,cAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAH2C;AAInDC,cAAAA,OAAO,EAAE;AAJ0C,aAApC,CADL;;AAAA;AACVC,YAAAA,MADU;AAQdC,YAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AAEA,gBAAI,CAACA,MAAM,CAACG,SAAZ,EAAuB;AACnBjB,cAAAA,QAAQ,CAACc,MAAM,CAACI,GAAR,CAAR;AACH;;AAZa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAeA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,UAAU,EAAE,QAAvB;AAAiCC,MAAAA,cAAc,EAAE;AAAjD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,gCAAd;AAA+C,IAAA,OAAO,EAAEf,SAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKP,KAAK,IAAI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE;AAAEmB,MAAAA,GAAG,EAAEnB;AAAP,KAAf;AAA+B,IAAA,KAAK,EAAE;AAAEuB,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,MAAM,EAAE;AAAtB,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFd,CADJ;AAMH","sourcesContent":["// import React, { useState } from \"react\";\n// import {\n//     StyleSheet,\n//     View,\n//     TextInput,\n//     Button,\n//     RadioButtonGroup,\n//     RadioButton,\n//     SafeAreaView, ScrollView,\n//     Text\n// } from \"react-native\";\n//\n// import {launchCamera, launchImageLibrary} from 'react-native-image-picker';\n//\n// import axios from \"axios\";\n//\n// class Inquiry extends React.Component {\n//     constructor() {\n//         super();\n//         this.state = {\n//             shop_name: \"\",\n//             owner_name: \"\",\n//             owner_NIC: \"\",\n//             address_no: \"\",\n//             suburb: \"\",\n//             city: \"\",\n//             province: \"\",\n//             country: \"\",\n//             telephone_numbers: \"\",\n//             user_id: \"\",\n//         };\n//     }\n//\n//     submit() {\n//         axios.post(\"http://104.236.38.247:8000/api/mobileshopadd\", {\n//             shop_name: this.state.shop_name,\n//             owner_name: this.state.owner_name,\n//             owner_NIC: this.state.owner_NIC,\n//             address_no: this.state.address_no,\n//             suburb: this.state.suburb,\n//             city: this.state.city,\n//             province: this.state.province,\n//             country: this.state.country,\n//             telephone_numbers: this.state.telephone_numbers,\n//             user_id: this.state.user_id,\n//         })\n//             .then((res) => console.log(res))\n//             .catch((error) => console.log(error));\n//     }\n//\n//     updateValue(text, field) {\n//         if (field == \"shop_name\") {\n//             this.setState({\n//                 shop_name: text,\n//             });\n//         } else if (field == \"owner_name\") {\n//             this.setState({\n//                 owner_name: text,\n//             });\n//         } else if (field == \"owner_NIC\") {\n//             this.setState({\n//                 owner_NIC: text,\n//             });\n//         } else if (field == \"address_no\") {\n//             this.setState({\n//                 address_no: text,\n//             });\n//         } else if (field == \"suburb\") {\n//             this.setState({\n//                 suburb: text,\n//             });\n//         } else if (field == \"city\") {\n//             this.setState({\n//                 city: text,\n//             });\n//         } else if (field == \"province\") {\n//             this.setState({\n//                 province: text,\n//             });\n//         } else if (field == \"country\") {\n//             this.setState({\n//                 country: text,\n//             });\n//         } else if (field == \"telephone_numbers\") {\n//             this.setState({\n//                 telephone_numbers: text,\n//             });\n//         } else if (field == \"user_id\") {\n//             this.setState({\n//                 user_id: text,\n//             });\n//         }\n//     }\n//\n//\n//\n//\n//\n//\n//     render() {\n//         return (\n//             <SafeAreaView style={styles.container}>\n//                 <ScrollView style={styles.scrollView}>\n//                     <View style={styles.container}>\n//                         <TextInput\n//                             style={styles.input}\n//                             placeholder=\"Enter Shop Name\"\n//                             onChangeText={(text) => this.updateValue(text, \"shop_name\")}\n//                         />\n//\n//                         <TextInput\n//                             style={styles.input}\n//                             placeholder=\"Enter Owner Name\"\n//                             onChangeText={(text) => this.updateValue(text, \"owner_name\")}\n//                         />\n//\n//                         <TextInput\n//                             style={styles.input}\n//                             placeholder=\"Enter NIC\"\n//                             onChangeText={(text) => this.updateValue(text, \"owner_NIC\")}\n//                         />\n//\n//                         <TextInput\n//                             style={styles.input}\n//                             placeholder=\"Enter Address No\"\n//                             onChangeText={(text) => this.updateValue(text, \"address_no\")}\n//                         />\n//\n//                         <TextInput\n//                             style={styles.input}\n//                             placeholder=\"Enter Suburb\"\n//                             onChangeText={(text) => this.updateValue(text, \"suburb\")}\n//                         />\n//\n//                         <TextInput\n//                             style={styles.input}\n//                             placeholder=\"Enter City\"\n//                             onChangeText={(text) => this.updateValue(text, \"city\")}\n//                         />\n//\n//                         <TextInput\n//                             style={styles.input}\n//                             placeholder=\"Enter Province\"\n//                             onChangeText={(text) => this.updateValue(text, \"province\")}\n//                         />\n//\n//                         <TextInput\n//                             style={styles.input}\n//                             placeholder=\"Enter Country\"\n//                             onChangeText={(text) => this.updateValue(text, \"country\")}\n//                         />\n//\n//                         <TextInput\n//                             style={styles.input}\n//                             placeholder=\"Enter TP\"\n//                             onChangeText={(text) => this.updateValue(text, \"telephone_numbers\")}\n//                         />\n//\n//                         <TextInput\n//                             style={styles.input}\n//                             placeholder=\"Enter User ID\"\n//                             onChangeText={(text) => this.updateValue(text, \"user_id\")}\n//                         />\n//\n//\n//                         <Button title=\"Upload Photo\"  />\n//\n//                         <Button\n//                             title=\"Submit\"\n//                             onPress={() => {\n//                                 this.submit();\n//                             }}\n//                         />\n//                     </View>\n//                 </ScrollView>\n//             </SafeAreaView>\n//         );\n//     }\n// }\n//\n// const styles = StyleSheet.create({\n//     input: {\n//         borderWidth: 2,\n//         borderColor: \"skyblue\",\n//         margin: 20,\n//         marginTop: 20,\n//     },\n//     container: {\n//         margin: 20,\n//         marginTop: 100,\n//     },\n//     scrollView: {\n//         backgroundColor: 'pink',\n//         marginHorizontal: 20,\n//     },\n//     text: {\n//         fontSize: 42,\n//     },\n// });\n//\n// export default Inquiry;\n\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Image, View, Platform } from 'react-native';\nimport * as ImagePicker from 'expo-image-picker';\n\nexport default function ImagePickerExample() {\n    const [image, setImage] = useState(null);\n\n    useEffect(() => {\n        (async () => {\n            if (Platform.OS !== 'web') {\n                const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n                if (status !== 'granted') {\n                    alert('Sorry, we need camera roll permissions to make this work!');\n                }\n            }\n        })();\n    }, []);\n\n    const pickImage = async () => {\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\n            allowsEditing: true,\n            aspect: [4, 3],\n            quality: 1,\n        });\n\n        console.log(result);\n\n        if (!result.cancelled) {\n            setImage(result.uri);\n        }\n    };\n\n    return (\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n            <Button title=\"Pick an image from camera roll\" onPress={pickImage} />\n            {image && <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />}\n        </View>\n    );\n}"]},"metadata":{},"sourceType":"module"}