{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dinujaya\\\\Desktop\\\\AwesomeProject\\\\Screens\\\\DrawerContent.js\";\nimport React, { useCallback, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useTheme, Avatar, Title, Caption, Paragraph, Drawer, Text, TouchableRipple, Switch } from 'react-native-paper';\nimport { DrawerContentScrollView, DrawerItem } from '@react-navigation/drawer';\nimport { Users, UserContext } from \"../Context/context\";\nimport { cart, CartContext } from \"../Context/context\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { NavigationActions as navigation } from \"react-navigation\";\nimport login from \"./login\";\nexport function DrawerContent(props) {\n  var _this = this;\n\n  var LoginUserId = useContext(UserContext);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isDarkTheme = _React$useState2[0],\n      setIsDarkTheme = _React$useState2[1];\n\n  var toggleTheme = function toggleTheme() {\n    setIsDarkTheme(!isDarkTheme);\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, React.createElement(DrawerContentScrollView, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.drawerContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.userInfoSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      marginTop: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, React.createElement(Avatar.Image, {\n    source: require(\"./icons/mn.jpg\"),\n    size: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }\n  }), React.createElement(View, {\n    style: {\n      marginLeft: 15,\n      flexDirection: 'column'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  }, React.createElement(Title, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 33\n    }\n  }, Users.lguserfname, \" \", Users.lguserlname), React.createElement(Caption, {\n    style: styles.caption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 33\n    }\n  }, Users.lguseremail)))), React.createElement(Drawer.Section, {\n    style: styles.drawerSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, React.createElement(DrawerItem, {\n    icon: function icon(_ref) {\n      var color = _ref.color,\n          size = _ref.size;\n      return React.createElement(Icon, {\n        name: \"home\",\n        color: color,\n        size: size,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 33\n        }\n      });\n    },\n    label: \"Home\",\n    onPress: function onPress() {\n      props.navigation.navigate('Home');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }), React.createElement(DrawerItem, {\n    icon: function icon(_ref2) {\n      var color = _ref2.color,\n          size = _ref2.size;\n      return React.createElement(Icon, {\n        name: \"account\",\n        color: color,\n        size: size,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 33\n        }\n      });\n    },\n    label: \"Profile\",\n    onPress: function onPress() {\n      props.navigation.navigate('Profile');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }), React.createElement(DrawerItem, {\n    icon: function icon(_ref3) {\n      var color = _ref3.color,\n          size = _ref3.size;\n      return React.createElement(Icon, {\n        name: \"bicycle-basket\",\n        color: color,\n        size: size,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 33\n        }\n      });\n    },\n    label: \"Order \",\n    onPress: function onPress() {\n      props.navigation.navigate('Notifications');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }), React.createElement(DrawerItem, {\n    icon: function icon(_ref4) {\n      var color = _ref4.color,\n          size = _ref4.size;\n      return React.createElement(Icon, {\n        name: \"android-messages\",\n        color: color,\n        size: size,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 33\n        }\n      });\n    },\n    label: \"Report\",\n    onPress: function onPress() {\n      props.navigation.navigate('Report');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }), React.createElement(DrawerItem, {\n    icon: function icon(_ref5) {\n      var color = _ref5.color,\n          size = _ref5.size;\n      return React.createElement(Icon, {\n        name: \"bank\",\n        color: color,\n        size: size,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 33\n        }\n      });\n    },\n    label: \"Shop\",\n    onPress: function onPress() {\n      props.navigation.navigate('Explore');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }), React.createElement(DrawerItem, {\n    icon: function icon(_ref6) {\n      var color = _ref6.color,\n          size = _ref6.size;\n      return React.createElement(Icon, {\n        name: \"android-messages\",\n        color: color,\n        size: size,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 33\n        }\n      });\n    },\n    label: \"Route Details\",\n    onPress: function onPress() {\n      props.navigation.navigate('RouteDetails');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  })), React.createElement(Drawer.Section, {\n    title: \"Preferences\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, React.createElement(TouchableRipple, {\n    onPress: function onPress() {\n      toggleTheme();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    style: styles.preference,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 33\n    }\n  }, \"Dark Theme\"), React.createElement(View, {\n    pointerEvents: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 33\n    }\n  }, React.createElement(Switch, {\n    value: isDarkTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 37\n    }\n  }))))), React.createElement(Drawer.Section, {\n    style: styles.bottomDrawerSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }, React.createElement(DrawerItem, {\n    icon: function icon(_ref7) {\n      var color = _ref7.color,\n          size = _ref7.size;\n      return React.createElement(Icon, {\n        name: \"exit-to-app\",\n        color: color,\n        size: size,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 33\n        }\n      });\n    },\n    label: \"Logout\",\n    onPress: function onPress() {\n      props.navigation.navigate('login');\n      console.log('beforeid#' + Users.loginuserid + 'beforeid2#' + cart.loginuserid2);\n      Users.loginuserid = null;\n      Users.lguserlname = null;\n      Users.lguserfname = null;\n      Users.unpshopid = null;\n      Users.moreshopid = null;\n      Users.lguseremail = null;\n      cart.loginuserid2 = null;\n      cart.shopidfo = null;\n      console.log('afterid#' + Users.loginuserid + 'afterid2#' + cart.loginuserid2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 25\n    }\n  })))));\n}\nvar styles = StyleSheet.create({\n  drawerContent: {\n    flex: 1,\n    backgroundColor: '#98AFC7'\n  },\n  userInfoSection: {\n    paddingLeft: 20\n  },\n  title: {\n    fontSize: 16,\n    marginTop: 3,\n    fontWeight: 'bold'\n  },\n  caption: {\n    fontSize: 14,\n    lineHeight: 14\n  },\n  row: {\n    marginTop: 20,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  section: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginRight: 15\n  },\n  paragraph: {\n    fontWeight: 'bold',\n    marginRight: 3\n  },\n  drawerSection: {\n    marginTop: 15\n  },\n  bottomDrawerSection: {\n    marginBottom: 15,\n    borderTopColor: '#f4f4f4',\n    borderTopWidth: 1\n  },\n  preference: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingVertical: 12,\n    paddingHorizontal: 16\n  },\n  fon: {\n    fontWeight: 'bold',\n    fontSize: 20,\n    color: '#fff'\n  }\n});","map":{"version":3,"sources":["C:/Users/Dinujaya/Desktop/AwesomeProject/Screens/DrawerContent.js"],"names":["React","useCallback","useContext","useTheme","Avatar","Title","Caption","Paragraph","Drawer","Text","TouchableRipple","Switch","DrawerContentScrollView","DrawerItem","Users","UserContext","cart","CartContext","Icon","NavigationActions","navigation","login","DrawerContent","props","LoginUserId","useState","isDarkTheme","setIsDarkTheme","toggleTheme","flex","styles","drawerContent","userInfoSection","flexDirection","marginTop","require","marginLeft","title","lguserfname","lguserlname","caption","lguseremail","drawerSection","color","size","navigate","preference","bottomDrawerSection","console","log","loginuserid","loginuserid2","unpshopid","moreshopid","shopidfo","StyleSheet","create","backgroundColor","paddingLeft","fontSize","fontWeight","lineHeight","row","alignItems","section","marginRight","paragraph","marginBottom","borderTopColor","borderTopWidth","justifyContent","paddingVertical","paddingHorizontal","fon"],"mappings":"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","sourcesContent":["import React, {useCallback, useContext} from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport {\r\n    useTheme,\r\n    Avatar,\r\n    Title,\r\n    Caption,\r\n    Paragraph,\r\n    Drawer,\r\n    Text,\r\n    TouchableRipple,\r\n    Switch\r\n} from 'react-native-paper';\r\nimport {\r\n    DrawerContentScrollView,\r\n    DrawerItem\r\n} from '@react-navigation/drawer';\r\nimport {Users,UserContext} from '../Context/context';\r\nimport {cart, CartContext} from '../Context/context';\r\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport {NavigationActions as navigation} from \"react-navigation\";\r\nimport login from \"./login\";\r\n\r\n//import{ AuthContext } from '../components/context';\r\n\r\nexport function DrawerContent(props) {\r\n\r\n    // const paperTheme = useTheme();\r\n        const LoginUserId=useContext(UserContext);\r\n    // const { signOut, toggleTheme } = React.useContext(AuthContext);\r\n    const [isDarkTheme, setIsDarkTheme] = React.useState(false);\r\n    const toggleTheme = () => {\r\n        setIsDarkTheme(!isDarkTheme);\r\n    }\r\n\r\n    return (\r\n        <View style={{ flex: 1 }}>\r\n            <DrawerContentScrollView {...props}>\r\n                <View style={styles.drawerContent}>\r\n                    <View style={styles.userInfoSection}>\r\n                        <View style={{ flexDirection: 'row', marginTop: 15 }}>\r\n                            <Avatar.Image\r\n\r\n                                source={require('./icons/mn.jpg')}\r\n\r\n                                size={50}\r\n                            />\r\n                            <View style={{ marginLeft: 15, flexDirection: 'column' }}>\r\n                                <Title style={styles.title}>{Users.lguserfname} {Users.lguserlname}</Title>\r\n                                <Caption style={styles.caption}>{Users.lguseremail}</Caption>\r\n                            </View>\r\n                        </View>\r\n\r\n\r\n                    </View>\r\n\r\n                    <Drawer.Section style={styles.drawerSection}>\r\n\r\n                        <DrawerItem\r\n                            icon={({ color, size }) => (\r\n                                <Icon\r\n                                    name=\"home\"\r\n                                    color={color}\r\n                                    size={size}\r\n                                />\r\n                            )}\r\n\r\n                            label=\"Home\"\r\n                            onPress={() => { props.navigation.navigate('Home') }}\r\n                        />\r\n                        <DrawerItem\r\n                            icon={({ color, size }) => (\r\n                                <Icon\r\n                                    name=\"account\"\r\n                                    color={color}\r\n                                    size={size}\r\n                                />\r\n                            )}\r\n                            label=\"Profile\"\r\n                            onPress={() => { props.navigation.navigate('Profile') }}\r\n                        />\r\n\r\n\r\n\r\n                        <DrawerItem\r\n                            icon={({ color, size }) => (\r\n                                <Icon\r\n                                    name=\"bicycle-basket\"\r\n                                    color={color}\r\n                                    size={size}\r\n                                />\r\n                            )}\r\n                            label=\"Order \"\r\n                            onPress={() => { props.navigation.navigate('Notifications') }}\r\n                        />\r\n\r\n                        <DrawerItem\r\n                            icon={({ color, size }) => (\r\n                                <Icon\r\n                                    name=\"android-messages\"\r\n                                    color={color}\r\n                                    size={size}\r\n                                />\r\n                            )}\r\n                            label=\"Report\"\r\n                            onPress={() => { props.navigation.navigate('Report') }}\r\n                        />\r\n\r\n                        <DrawerItem\r\n                            icon={({ color, size }) => (\r\n                                <Icon\r\n                                    name=\"bank\"\r\n                                    color={color}\r\n                                    size={size}\r\n                                />\r\n                            )}\r\n                            label=\"Shop\"\r\n                            onPress={() => { props.navigation.navigate('Explore') }}\r\n                        />\r\n                        <DrawerItem\r\n                            icon={({ color, size }) => (\r\n                                <Icon\r\n                                    name=\"android-messages\"\r\n                                    color={color}\r\n                                    size={size}\r\n                                />\r\n                            )}\r\n                            label=\"Route Details\"\r\n                            onPress={() => { props.navigation.navigate('RouteDetails') }}\r\n                        />\r\n\r\n\r\n                    </Drawer.Section>\r\n\r\n\r\n\r\n\r\n\r\n                    <Drawer.Section title=\"Preferences\">\r\n                        <TouchableRipple onPress={() => { toggleTheme() }}>\r\n                            <View style={styles.preference}>\r\n                                <Text>Dark Theme</Text>\r\n                                <View pointerEvents=\"none\">\r\n                                    <Switch value={isDarkTheme} />\r\n                                </View>\r\n                            </View>\r\n                        </TouchableRipple>\r\n                    </Drawer.Section>\r\n\r\n\r\n                    <Drawer.Section style={styles.bottomDrawerSection}>\r\n                        <DrawerItem\r\n                            icon={({ color, size }) => (\r\n                                <Icon\r\n                                    name=\"exit-to-app\"\r\n                                    color={color}\r\n                                    size={size}\r\n                                />\r\n                            )}\r\n                            label=\"Logout\"\r\n                            onPress={() => {props.navigation.navigate('login');\r\n                                console.log('beforeid#'+ Users.loginuserid + 'beforeid2#'+cart.loginuserid2);\r\n                                Users.loginuserid=null;\r\n                                Users.lguserlname=null;\r\n                                Users.lguserfname=null;\r\n                                Users.unpshopid=null;\r\n                                Users.moreshopid=null;\r\n                                Users.lguseremail=null;\r\n                                cart.loginuserid2=null\r\n                                cart.shopidfo=null;\r\n                                console.log('afterid#'+Users.loginuserid+ 'afterid2#'+cart.loginuserid2);}}\r\n                        />\r\n                    </Drawer.Section>\r\n                </View>\r\n            </DrawerContentScrollView>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    drawerContent: {\r\n        flex: 1,\r\n        backgroundColor: '#98AFC7',\r\n    },\r\n    userInfoSection: {\r\n        paddingLeft: 20,\r\n    },\r\n    title: {\r\n        fontSize: 16,\r\n        marginTop: 3,\r\n        fontWeight: 'bold',\r\n    },\r\n    caption: {\r\n        fontSize: 14,\r\n        lineHeight: 14,\r\n    },\r\n    row: {\r\n        marginTop: 20,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    section: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        marginRight: 15,\r\n    },\r\n    paragraph: {\r\n        fontWeight: 'bold',\r\n        marginRight: 3,\r\n    },\r\n    drawerSection: {\r\n        marginTop: 15,\r\n        // color:'#98AFC7',\r\n\r\n    },\r\n    bottomDrawerSection: {\r\n        marginBottom: 15,\r\n        borderTopColor: '#f4f4f4',\r\n        borderTopWidth: 1\r\n    },\r\n    preference: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        paddingVertical: 12,\r\n        paddingHorizontal: 16,\r\n    },\r\n\r\n    fon: {\r\n        fontWeight: 'bold',\r\n        fontSize: 20,\r\n        color: '#fff',\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}